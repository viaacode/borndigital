<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <ftp:connector name="SidecarXML" pollingFrequency="1000" validateConnections="true" doc:name="FTP">
        <reconnect/>
    </ftp:connector>
    <flow name="Form">
        <http:listener config-ref="InputCSVListener" path="/*" allowedMethods="GET, POST" doc:name="HTTP :8063"/>
        <choice doc:name="Check HTTP method">
            <when expression="#[message.inboundProperties.'http.method' == 'POST']">
                <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
                <set-variable variableName="filename_csv" value="#[payload['filename']]" doc:name="Set filename_csv"/>
                <set-variable variableName="cp" value="#[payload['cp']]" doc:name="Set cp"/>
                <set-variable variableName="destination_path" value="#['/export/home/' + flowVars.cp + '/incoming/']" doc:name="Set destination_path by cp"/>
                <set-payload value="#[payload['data']]" doc:name="Set Payload"/>
                <async processingStrategy="Asynchronous_Processing_Strategy" doc:name="Async">
                    <foreach doc:name="For Each">
                        <flow-ref name="makeSidecar" doc:name="makeSidecar"/>
                    </foreach>
                </async>
            </when>
            <otherwise>
                <http:static-resource-handler resourceBase="${app.home}/form" doc:name="HTTP Static Resource Handler"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger level="ERROR" doc:name="Logger"/>
        </catch-exception-strategy>
    </flow>
    <flow name="makeSidecar">
        <set-variable variableName="filename" value="#[payload.filename]" doc:name="Set filename"/>
        <set-variable variableName="filenameWithoutExtension" value="#[flowVars.filename.substring(0, flowVars.filename.indexOf('.'))]" doc:name="Set filenameWithoutExtension"/>
        <set-variable variableName="id" value="#[payload.id != '' ? payload.id : flowVars.filenameWithoutExtension]" doc:name="Set id (when empty use filename without extension)"/>
        <dw:transform-message doc:name="Build sidecar">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	MediaHAVEN_external_metadata: {
		MDProperties: {
			CP: flowVars.cp,
			sp_name: 'borndigital',
			dc_identifier_localid: flowVars.id,
			dc_source: flowVars.filename,
			md5: payload.md5
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <ftp:outbound-endpoint host="${ftpSource.host}" port="21" path="#[flowVars.destination_path]" user="${ftpSource.username}" password="${ftpSource.password}" connector-ref="SidecarXML" outputPattern="#[flowVars.filenameWithoutExtension + &quot;.xml&quot;]" responseTimeout="10000" doc:name="FTP"/>
        <logger message="Succesfully placed sidecar for #[flowVars.id]" level="INFO" doc:name="Succes!"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="Creating sidecar failed" level="WARN" doc:name="Creating sidecar failed"/>
        </catch-exception-strategy>
    </flow>
</mule>
