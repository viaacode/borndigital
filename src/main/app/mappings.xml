<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <http:request-config name="vlaamsparlement_api" host="ws.vlpar.be" port="80" basePath="/" doc:name="HTTP Request Configuration" responseTimeout="20000">
        <http:proxy host="proxy.do.viaa.be" port="80"/>
    </http:request-config>
    <http:request-config name="edtf_validator" host="edtf-validate-python2.apps.ori-qas.do.viaa.be" port="80"  doc:name="HTTP Request Configuration" responseTimeout="20000">
        <http:proxy host="proxy.do.viaa.be" port="80"/>
    </http:request-config>
    <sub-flow name="PI_METADATA_MAPPING_MHEM">
        <set-variable variableName="eventName" value="PI_METADATA_MAPPING" doc:name="Set Name"/>
        <set-variable variableName="comment" value="#[flowVars.httpResult]" doc:name="Set Comment"/>
        <set-payload value="#[flowVars.incomingXml]" doc:name="Set Payload with incomingXml"/>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <set-variable variableName="CreationDate" value="#[xpath3(&quot;//*[local-name() = 'dcterms_issued']/text()&quot;) != &quot;&quot; ? (xpath3(&quot;//*[local-name() = 'dcterms_issued']/text()&quot;).replaceAll('-', ':').substring(0,10) + &quot; 00:00:00&quot;) : null]" doc:name="Set CreationDate from dcterms_issued (from EDTF to EXIF)"/>
        <dw:transform-message metadata:id="d696f7ed-e9b9-4f34-8265-1191510a0be4" doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data/empty.xml"/>
            <dw:input-variable variableName="comment"/>
            <dw:input-variable doc:sample="sample_data/string.dwl" variableName="CreationDate"/>
            <dw:input-variable doc:sample="sample_data/string_1.dwl" mimeType="application/java" variableName="filenameEssence"/>
            <dw:input-variable doc:sample="sample_data/list_string.dwl" mimeType="application/java" variableName="pid_collateral"/>
            <dw:input-variable doc:sample="sample_data/map.dwl" variableName="cp"/>
            <dw:input-variable doc:sample="sample_data/map_1.dwl" variableName="pid"/>
            <dw:input-variable doc:sample="sample_data/MyPojo.dwl" variableName="cp_id"/>
            <dw:set-payload><![CDATA[%dw 1.0
%input payload application/xml
%output application/xml skipNullOn="everywhere"
%function split(name) name splitBy ","
---
{
	MediaHAVEN_external_metadata: {
		title: payload.VIAA.dc_title when payload.VIAA.dc_title?
			otherwise (payload.VIAA.dc_titles[0] when (payload.VIAA.dc_titles?)
			otherwise (payload.VIAA.dc_description_short when payload.VIAA.dc_description_short?
			otherwise "")),
		description: payload.VIAA.dc_description when payload.VIAA.dc_description? 
					otherwise (payload.VIAA.dc_description_short when payload.VIAA.dc_description_short?
					otherwise ""),
		MDProperties: {
			(payload.*VIAA map (
				$
			)),
			(sp_name: 'borndigital') when payload.VIAA.sp_name == null,
			(CP: flowVars.cp) when payload.VIAA.CP == null,
			CP_id: flowVars.cp_id,
			PID: flowVars.pid,
			(dc_relations @(type: "list"): { (flowVars.collaterals map (bevat: $)) }) when flowVars.pid_collateral?,
			(CreationDate: flowVars.CreationDate) when flowVars.CreationDate != null,
			(dc_source: flowVars.filenameEssence) when payload.VIAA.dc_source == null
			// Default VIAA license?
			//dc_rights_licenses @(type: "list"): {
			//	(licentie: flowVars.license) when flowVars.license?
			//}
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <set-variable variableName="mappedXml" value="#[payload]" doc:name="Set mappedXml"/>
        <set-variable variableName="result" value="OK" doc:name="Set result OK"/>
        <set-variable variableName="comment" value="The input XML was mapped succesfully: #[payload]" doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </sub-flow>
    <flow name="get_sidecar">
        <logger message="Start get_sidecar: #[payload]" level="INFO" doc:name="Start get_sidecar"/>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <logger message="After: #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
        <sub-flow name="PI_METADATA_MAPPING_VRT">
        <set-variable variableName="eventName" value="PI_METADATA_MAPPING" doc:name="Set Name"/>
        <set-variable variableName="comment" value="#[flowVars.httpResult]" doc:name="Set Comment"/>
        <set-payload value="#[flowVars.incomingXml]" doc:name="Set Payload"/>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="ef2d489e-12ad-4b91-8add-659011b32d9a">
            <dw:input-variable doc:sample="string_1.dwl" variableName="origin"/>
            <dw:input-variable doc:sample="string_2.dwl" variableName="mediaId"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	MediaHAVEN_external_metadata: 
	{
		title: flowVars.pid ++ "-" ++ flowVars.local_id,
		MDProperties: {
			CP: p('cp'),
			CP_id: flowVars.cp_id,
			sp_name: 'dailies' when flowVars.origin != 'tape' otherwise 'intake_existing',
			PID: flowVars.pid,
			dc_identifier_localid: flowVars.local_id,
			(md5: flowVars.md5metadata) when flowVars.md5metadata?
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <set-variable variableName="mappedXml" value="#[payload]" doc:name="Set mappedXml"/>
        <!--
        <message-filter throwOnUnaccepted="true" doc:name="Check output format">
            <and-filter>
                <expression-filter expression="#[flowVars.comment = &quot;Output format is incorrect.&quot;]"/>
            </and-filter>
        </message-filter>
        -->
        <set-variable variableName="result" value="OK" doc:name="Set result OK"/>
        <set-variable variableName="comment" value="The input XML was mapped succesfully: #[payload]" doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </sub-flow>
    <sub-flow name="PI_METADATA_MAPPING_MEISE">
        <set-variable variableName="eventName" value="PI_METADATA_MAPPING" doc:name="Set Name"/>
        <set-variable variableName="comment" value="#[flowVars.httpResult]" doc:name="Set Comment"/>
        <set-payload value="#[flowVars.incomingXml]" doc:name="Set Payload"/>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <dw:transform-message metadata:id="d696f7ed-e9b9-4f34-8265-1191510a0be4" doc:name="Transform Message">
            <dw:input-payload doc:sample="content.xml"/>
            <dw:input-variable variableName="comment"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	MediaHAVEN_external_metadata: payload.root.MediaHAVEN_external_metadata
}]]></dw:set-payload>
        </dw:transform-message>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <set-variable variableName="CP" value="#[xpath3(&quot;//CP/text()&quot;)]" doc:name="Set CP"/>
        <set-variable variableName="comment" value="The input XML was mapped succesfully: #[payload]" doc:name="Set comment"/>
        <set-variable variableName="mappedXml" value="#[payload]" doc:name="Set MappedXml"/>
        <set-variable variableName="result" value="OK" doc:name="Set result OK"/>
        <set-variable variableName="comment" value="The input XML was mapped succesfully: #[payload]" doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </sub-flow>
    <sub-flow name="PI_METADATA_MAPPING_VLAAMS_PARLEMENT">
        <set-variable variableName="eventName" value="PI_METADATA_MAPPING" doc:name="Set Name"/>
        <set-variable variableName="comment" value="#[flowVars.httpResult]" doc:name="Set Comment"/>
        <set-payload value="#[flowVars.incomingXml]" doc:name="Set Payload with sidecar"/>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <set-variable variableName="filenameEssence" value="#[flowVars.filenameEssence != null ? flowVars.filenameEssence : xpath3(&quot;//dc_source/text()&quot;)]" doc:name="Set filenameEssence"/>
        <set-variable variableName="total" value="#[flowVars.filenameEssence.replaceAll('^.*_[1-9]+v([1-9]+)\\..*', '$1') != flowVars.filenameEssence ? flowVars.filenameEssence.replaceAll('^.*_[1-9]+v([1-9]+)\\..*', '$1') : &quot;1&quot;]" doc:name="Set total"/>
        <until-successful maxRetries="2" millisBetweenRetries="5000" synchronous="true" doc:name="Until Successful">
            <http:request config-ref="vlaamsparlement_api" path="#['/e/opendata/verg/' + flowVars.local_id]" method="GET" doc:name="Get metadata from open data portal">
                <http:request-builder>
                    <http:header headerName="Accept" value="application/json"/>
                </http:request-builder>
            </http:request>
        </until-successful>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <json:json-to-object-transformer  doc:name="JSON to Object" returnClass="java.util.HashMap"/>
        <set-variable variableName="vergadering_response" value="#[payload]" doc:name="Set vergadering_response"/>
        <set-variable variableName="type" value="#[payload.get(&quot;vergadering&quot;).get(&quot;type&quot;).toString()]" doc:name="Set type (Plenair | Commissie)"/>
        <choice doc:name="Plenaire or commissie?">
            <when expression="#[flowVars.type == &quot;Plenair&quot;]">
                <set-variable variableName="titelType" value="#[&quot;Plenaire vergadering&quot;]" doc:name="Set titelType plenaire"/>
            </when>
            <otherwise>
                <set-variable variableName="titelType" value="#[payload.vergadering.commissie[0].titel]" doc:name="Set titelType"/>
            </otherwise>
        </choice>
        <set-variable variableName="datumBegin" value="#[payload.get(&quot;vergadering&quot;).get(&quot;datumbegin&quot;).toString().substring(0,19)]" doc:name="Set datumBegin"/>
        <set-variable variableName="dayOfWeek" value="#[new org.mule.el.datetime.DateTime(flowVars.datumBegin).getDayOfWeek()]" doc:name="Set dayOfWeek"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.dayOfWeek == &quot;1&quot;]">
                <set-variable variableName="dag" value="#[&quot;zondag&quot;]" doc:name="Set dag zondag"/>
            </when>
            <when expression="#[flowVars.dayOfWeek == &quot;7&quot;]">
                <set-variable variableName="dag" value="#[&quot;zaterdag&quot;]" doc:name="Set dag zaterdag"/>
            </when>
            <when expression="#[flowVars.dayOfWeek == &quot;6&quot;]">
                <set-variable variableName="dag" value="#[&quot;vrijdag&quot;]" doc:name="Set dag vrijdag"/>
            </when>
            <when expression="#[flowVars.dayOfWeek == &quot;5&quot;]">
                <set-variable variableName="dag" value="#[&quot;donderdag&quot;]" doc:name="Set dag donderdag"/>
            </when>
            <when expression="#[flowVars.dayOfWeek == &quot;4&quot;]">
                <set-variable variableName="dag" value="#[&quot;woensdag&quot;]" doc:name="Set dag woensdag"/>
            </when>
            <when expression="#[flowVars.dayOfWeek == &quot;3&quot;]">
                <set-variable variableName="dag" value="#[&quot;dinsdag&quot;]" doc:name="Set dag dinsdag"/>
            </when>
            <otherwise>
                <set-variable variableName="dag" value="#[&quot;maandag&quot;]" doc:name="Set dag maandag"/>
            </otherwise>
        </choice>
        <set-variable variableName="month" value="#[new org.mule.el.datetime.DateTime(flowVars.datumBegin).getMonth()]" doc:name="Set month"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.month == 5]">
                <set-variable variableName="maand" value="#[&quot;mei&quot;]" doc:name="Set maand mei"/>
            </when>
            <when expression="#[flowVars.month == 4]">
                <set-variable variableName="maand" value="#[&quot;april&quot;]" doc:name="Set maand april"/>
            </when>
            <when expression="#[flowVars.month == 3]">
                <set-variable variableName="maand" value="#[&quot;maart&quot;]" doc:name="Set maand maart"/>
            </when>
            <when expression="#[flowVars.month == 2]">
                <set-variable variableName="maand" value="#[&quot;februari&quot;]" doc:name="Set maand februari"/>
            </when>
            <when expression="#[flowVars.month == 10]">
                <set-variable doc:name="Set maand oktober" value="#[&quot;oktober&quot;]" variableName="maand"/>
            </when>
            <when expression="#[flowVars.month == 9]">
                <set-variable doc:name="Set maand september" value="#[&quot;september&quot;]" variableName="maand"/>
            </when>
            <when expression="#[flowVars.month == 8]">
                <set-variable doc:name="Set maand augustus" value="#[&quot;augustus&quot;]" variableName="maand"/>
            </when>
            <when expression="#[flowVars.month == 7]">
                <set-variable doc:name="Set maand juli" value="#[&quot;juli&quot;]" variableName="maand"/>
            </when>
            <when expression="#[flowVars.month == 6]">
                <set-variable doc:name="Set maand juni" value="#[&quot;juni&quot;]" variableName="maand"/>
            </when>
            <when expression="#[flowVars.month == 11]">
                <set-variable variableName="maand" value="#[&quot;november&quot;]" doc:name="Set maand november"/>
            </when>
            <when expression="#[flowVars.month == 12]">
                <set-variable variableName="maand" value="#[&quot;december&quot;]" doc:name="Set maand december"/>
            </when>
            <otherwise>
                <set-variable variableName="maand" value="#[&quot;januari&quot;]" doc:name="Set maand januari"/>
            </otherwise>
        </choice>
        <set-variable variableName="datumTitel" value="#[flowVars.dag + &quot; &quot; + flowVars.datumBegin.substring(8,10).replaceFirst(&quot;^0+(?!$)&quot;, &quot;&quot;) + &quot; &quot; + flowVars.maand + &quot; &quot; + flowVars.datumBegin.substring(0,4) + &quot;, &quot; + flowVars.datumBegin.substring(11,13) + &quot;.&quot; + flowVars.datumBegin.substring(14,16) + &quot;u&quot;]" doc:name="Set datumTitel (bv. Plenaire vergadering woensdag 16 november 2011, 14.00u)"/>
        <set-variable variableName="CreationDate" value="#[payload.get(&quot;vergadering&quot;).get(&quot;datumbegin&quot;).toString().substring(0,10).replaceAll('-', ':') + &quot; &quot; + payload.get(&quot;vergadering&quot;).get(&quot;datumbegin&quot;).toString().substring(11,19).replaceAll('-',':')]" doc:name="Set CreationDate (MH)"/>
        <expression-component doc:name="Set deel from filename"><![CDATA[#[flowVars.deel = flowVars.filenameEssence.replaceAll('^.*_([1-9]+)v[1-9]+\\..*', '$1') != flowVars.filenameEssence ?  (" (Deel " + flowVars.filenameEssence.replaceAll('^.*_([1-9]+)v[1-9]+\\..*', '$1') + "/" + flowVars.total + ") ") : "" ]]]></expression-component>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <flow-ref name="PI_METADATA_MAPPING_VLAAMSPARLEMENT_DESCRIPTION" doc:name="PI_METADATA_MAPPING_VLAAMSPARLEMENT_DESCRIPTION"/>
        <flow-ref name="PI_METADATA_MAPPING_VLAAMSPARLEMENT_TRANSCRIPTIE_AND_DESCRIPTION_LANG" doc:name="PI_METADATA_MAPPING_VLAAMSPARLEMENT_TRANSCRIPTIE"/>
        <set-payload value="#[flowVars.vergadering_response]" doc:name="Set Payload with vergadering_response"/>
        <dw:transform-message metadata:id="d696f7ed-e9b9-4f34-8265-1191510a0be4" doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data/json.json"/>
            <dw:input-variable variableName="comment"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	MediaHAVEN_external_metadata: {
		title: flowVars.titelType ++ " " ++ flowVars.deel ++ flowVars.datumTitel,
		description: flowVars.dc_description,
		MDProperties: {
			PID: flowVars.pid,
			CP: 'Vlaams Parlement',
			CP_id: 'OR-7h1dk9t',
			sp_name: 'borndigital',
			dc_source: flowVars.filenameEssence,
			dc_identifier_localid: flowVars.local_id,
			dc_identifier_localids @(type: "list"): {
				(pdf: payload.vergadering.commissiehandelingen.pdffilewebpath when flowVars.type == "Commissie"
					otherwise payload.vergadering.plenairehandelingen.pdffilewebpath) when payload.vergadering != null,
				bestandsnaam: flowVars.filenameEssence,
				api: 'http://ws.vlpar.be/e/opendata/verg/' ++ flowVars.local_id
			},
			(dc_titles @(type: "list"): {
				reeks: payload.vergadering.commissie[0].titel when flowVars.type == "Commissie"
						otherwise "Plenair"
			}) when payload.vergadering != null,
			CreationDate: flowVars.CreationDate,
			dcterms_issued: flowVars.datumBegin,
			dcterms_created: flowVars.datumBegin,
			(dc_contributors @(type: "list"): {
				(voorzitter: payload.vergadering.voorzitter.voornaam ++ " " ++
							payload.vergadering.voorzitter.naam ++ " (" ++
							 payload.vergadering.voorzitter.fractie.naam ++ ")") when payload.vergadering.voorzitter?,
				(((payload.vergadering.aanwezigheid) when payload.vergadering.aanwezigheid? otherwise []) map using (aanwezigheid = $) {
					(aanwezigheid.persoon map using (persoon = $) {
						(lower aanwezigheid.aanwezigheid-status): (persoon.voornaam ++ " " ++ persoon.naam ++ " (" ++ persoon.fractie.naam ++ ")")
					})
				})
			}) when payload.vergadering != null,
			(dc_subjects @(type: "list"): {
				Trefwoord: "Vergaderzaal: " ++ payload.vergadering.vergaderzaal.naam when payload.vergadering.vergaderzaal.naam?
					otherwise ("Koepel" when flowVars.type == "Plenair" otherwise "onbekend")
			}) when payload.vergadering != null,
			dc_description: flowVars.dc_description,
			dc_description_lang: flowVars.dc_description_lang,
			dc_description_transcriptie: flowVars.transcriptie replace "&#13;" with "",
			dc_rights_licenses @(type: "list"): {
				multiselect: "VIAA-ONDERWIJS",
				multiselect: "VIAA-ONDERZOEK",
				multiselect: "VIAA-INTRA_CP-CONTENT",
				multiselect: "VIAA-INTRA_CP-METADATA-ALL",
				multiselect: "VIAA-PUBLIEK-METADATA-LTD",
				multiselect: "VIAA-PUBLIEK-METADATA-ALL",
				multiselect: "VIAA-PUBLIEK-CONTENT", 
				multiselect: "CC-BY-SA-CONTENT"
			},
			dc_rights_rightsOwners @(type: "list"): {
				Auteursrechthouder: "Vlaams Parlement"
			},
			dc_rights_rightsHolders @(type: "list"): {
				Licentiehouder: "Vlaams Parlement"
			},
			md5: flowVars.md5metadata			
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
        <set-variable variableName="mappedXml" value="#[payload]" doc:name="Set MappedXml"/>
        <set-variable variableName="result" value="OK" doc:name="Set result OK"/>
        <set-variable variableName="comment" value="The input XML was mapped succesfully" doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </sub-flow>
    <sub-flow name="PI_METADATA_MAPPING_VLAAMSPARLEMENT_DESCRIPTION">
    	<set-variable variableName="dc_description" value="#[&quot;&quot;]" doc:name="init dc_description"/>
        <foreach collection="#[payload.get('vergadering').get('agenda-item')]" doc:name="For Each agenda-item" counterVariableName="counterItem">
            <set-variable variableName="agenda_lijnen" value="#[&quot;&quot;]" doc:name="Init agenda_lijnen"/>
            <foreach collection="#[payload.get('agenda-lijn')]" doc:name="For Each agenda-lijn" counterVariableName="counterLijn">
                <set-variable variableName="titel" value="#[payload.titel != null ? payload.titel + &quot;\n&quot; : &quot;&quot;]" doc:name="Set titel"/>
                <set-variable variableName="omschrijving" value="#[payload.omschrijving != null ? payload.omschrijving + &quot;\n&quot; : &quot;&quot;]" doc:name="Set omschrijving"/>
                <set-variable variableName="agendalijntype" value="#[payload.'agenda-lijn-type' != null &amp;&amp; payload.'agenda-lijn-type'.naam != 'Tekst kader vet' ? payload.'agenda-lijn-type'.naam + &quot;\n&quot; : &quot;&quot;]" doc:name="Set agendalijntype"/>
                <set-variable variableName="debat" value="#[&quot;&quot;]" doc:name="Reset debat"/>
                <choice doc:name="debat &gt; 0?">
                    <when expression="#[payload.'debat'.size() &gt; 0]">
                        <foreach collection="#[payload.'debat']" doc:name="For Each debat">
                            <set-variable variableName="zittingsjaar" value="#[payload.zittingsjaar != null  &amp;&amp; payload.zittingsjaar != &quot;&quot; ?  &quot;(&quot; + payload.zittingsjaar + &quot;)&quot; : &quot;&quot;]" doc:name="Set zittingsjaar"/>
                            <set-variable variableName="nummer" value="#[payload.nummer != null  &amp;&amp; payload.nummer != &quot;&quot; ? payload.nummer + &quot; &quot; : &quot;&quot;]" doc:name="Set nummer"/>
                            <set-variable variableName="debat" value="#[flowVars.'debat' != null ? (flowVars.'debat' + payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar + &quot;\n&quot;) : (payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar)]" doc:name="Set debat"/>
                        </foreach>
                    </when>
                    <otherwise>
                        <set-variable doc:name="Set debat empty" value="#[&quot;&quot;]" variableName="debat"/>
                    </otherwise>
                </choice>
                <set-variable variableName="gedachtewisseling" value="#[&quot;&quot;]" doc:name="Reset gedachtewisseling"/>
            <choice tracking:enable-default-events="true" doc:name="Gedachtewisseling &gt; 0?">
                <when expression="#[payload.'gedachtewisseling'.size() &gt; 0]">
                    <foreach collection="#[payload.'gedachtewisseling']" doc:name="For Each gedachtewisseling">
                        <set-variable variableName="gedachtewisseling" value="#[flowVars.'gedachtewisseling' != null ? (flowVars.'gedachtewisseling' + payload.titel + &quot;\n&quot;) : (payload.titel + &quot;\n&quot;)]" doc:name="Set gedachtewisseling"/>
                    </foreach>
                </when>
                <otherwise>
                    <set-variable variableName="gedachtewisseling" value="#[&quot;&quot;]" doc:name="Set gedachtewisseling empty"/>
                </otherwise>
            </choice>
                <set-variable variableName="parlementair_initiatieven" value="#[null]" doc:name="Reset parlementair_initiatieven"/>
                <choice doc:name="Parlementaire initieven &gt; 0?">
                    <when expression="#[payload.'parlementair-initiatief'.size() &gt; 0]">
                        <foreach collection="#[payload.'parlementair-initiatief']" doc:name="For Each parlementaire initiatief">
                            <set-variable variableName="zittingsjaar" value="#[payload.zittingsjaar != null  &amp;&amp; payload.zittingsjaar != &quot;&quot; ?  &quot;(&quot; + payload.zittingsjaar + &quot;)&quot; : &quot;&quot;]" doc:name="Set zittingsjaar"/>
                            <set-variable variableName="nummer" value="#[payload.nummer != null  &amp;&amp; payload.nummer != &quot;&quot; ? payload.nummer + &quot; &quot; : &quot;&quot;]" doc:name="Set nummer"/>
                            <set-variable variableName="materie" value="#[payload.materie != null &amp;&amp; payload.materie != &quot;&quot; ? payload.materie + &quot;\n&quot; : &quot;&quot;]" doc:name="Set materie"/>
                            <set-variable variableName="volgnummer" value="#[payload.volgnr != null  &amp;&amp; payload.volgnr != &quot;&quot; ? &quot; nr. &quot; + payload.volgnr : &quot;&quot;]" doc:name="Set volgnummer"/>
                            <set-variable variableName="parlementair_initiatieven" value="#[flowVars.'parlementair_initiatieven' != null ? (flowVars.'parlementair_initiatieven' + payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot; + flowVars.materie + &quot;\n&quot;) : (payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot; + flowVars.materie + &quot;\n&quot;)]" doc:name="Set parlementair_initiatieven"/>
                        </foreach>
                    </when>
                    <otherwise>
                        <set-variable variableName="parlementair_initiatieven" value="#[&quot;&quot;]" doc:name="Set parlementair_initiatieven empty"/>
                    </otherwise>
                </choice>
                <set-variable variableName="vrageninterpellatie" value="#[null]" doc:name="Reset vrageninterpellatie"/>
                <choice doc:name="Vrageninterpellaties &gt; 0?">
                    <when expression="#[payload.vrageninterpellatie.size() &gt; 0]">
                        <foreach collection="#[payload.vrageninterpellatie]" doc:name="For Each vrageninterpellatie">
                            <set-variable variableName="zittingsjaar" value="#[payload.zittingsjaar != null  &amp;&amp; payload.zittingsjaar != &quot;&quot; ? &quot;(&quot; + payload.zittingsjaar + &quot;)&quot; : &quot;&quot;]" doc:name="Set zittingsjaar"/>
                            <set-variable variableName="nummer" value="#[payload.nummer != null  &amp;&amp; payload.nummer != &quot;&quot; ? payload.nummer + &quot; &quot; : &quot;&quot;]" doc:name="Set nummer"/>
                            <set-variable variableName="materie" value="#[payload.materie != null  &amp;&amp; payload.materie != &quot;&quot; ? payload.materie + &quot;\n&quot; : &quot;&quot;]" doc:name="Set materie"/>
                            <set-variable variableName="volgnummer" value="#[payload.volgnr != null  &amp;&amp; payload.volgnr != &quot;&quot; ? &quot; nr. &quot; + payload.volgnr : &quot;&quot;]" doc:name="Set volgnummer"/>
                            <set-variable variableName="vrageninterpellatie" value="#[flowVars.vrageninterpellatie != null  ? (flowVars.vrageninterpellatie + payload.titel + &quot;\n&quot; + flowVars.nummer +  flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot; + flowVars.materie + &quot;\n&quot;) : (payload.titel + &quot;\n&quot; + flowVars.nummer +  flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot;+ flowVars.materie + &quot;\n&quot;)]" doc:name="Set vrageninterpellatie"/>
                        </foreach>
                    </when>
                    <otherwise>
                        <set-variable variableName="vrageninterpellatie" value="#[&quot;&quot;]" doc:name="Set vrageninterpellatie empty"/>
                    </otherwise>
                </choice>
                <set-variable variableName="agenda_lijnen" value="#[flowVars.agenda_lijnen += flowVars.agendalijntype + flowVars.debat + flowVars.gedachtewisseling + flowVars.'parlementair_initiatieven' + flowVars.vrageninterpellatie + flowVars.titel + flowVars.omschrijving + &quot;\n&quot;]" doc:name="Set agenda_lijnen"/>
            </foreach>
            <set-variable variableName="dc_description" value="#[flowVars.dc_description += flowVars.agenda_lijnen]" doc:name="Set dc_description by concat agenda_lijnen"/>
            <set-variable variableName="dc_description" value="#[flowVars.dc_description.replaceAll('&lt;br/&gt;', &quot;\n&quot;)]" doc:name="Change &lt;br/&gt; to newlines"/>
            <set-variable variableName="dc_description" value="#[flowVars.dc_description.replaceAll(&quot;\\&lt;[^&gt;]*&gt;&quot;,&quot;&quot;)]" doc:name="Remove html tags from dc_description"/>
        </foreach>
    </sub-flow>
    <sub-flow name="PI_METADATA_MAPPING_VLAAMSPARLEMENT_TRANSCRIPTIE_AND_DESCRIPTION_LANG">
        <set-variable variableName="transcriptie" value="#[&quot;&quot;]" doc:name="Set transcriptie empty"/>
        <set-variable variableName="dc_description_lang" value="#[&quot;&quot;]" doc:name="Set dc_description_lang empty"/>
        <foreach collection="#[payload.get('vergadering').get('journaallijn')]" doc:name="For Each journaallijn">
            <set-variable variableName="journaalllijn_subtitel" value="#[payload.get(&quot;titel&quot;)]" doc:name="Set journaalllijn_subtitel"/>
            <set-variable variableName="journaallijn_voorzitter" value="#[&quot;Voorzitter: &quot; + payload.get(&quot;vergadering&quot;).get(&quot;voorzitter&quot;).get(&quot;aanspreking&quot;) + &quot; &quot; + payload.get(&quot;vergadering&quot;).get(&quot;voorzitter&quot;).get(&quot;voornaam&quot;) + &quot; &quot;  + payload.get(&quot;vergadering&quot;).get(&quot;voorzitter&quot;).get(&quot;naam&quot;)]" doc:name="Set journaallijn_voorzitter"/>
            <set-variable variableName="journaallijn_titel" value="#[payload.get(&quot;titel&quot;)]" doc:name="Set journaallijn_titel"/>
            <set-variable variableName="titel-samenstelling" value="#[payload.get(&quot;titel-samenstelling&quot;)]" doc:name="Set titel-samenstelling"/>
            <set-variable variableName="url" value="#[payload.get('link')[0].get('href')]" doc:name="Set url"/>
            <set-variable variableName="path" value="#[flowVars.url.substring(flowVars.url.indexOf('/e/opendata/'))]" doc:name="Set path"/>
            <http:request config-ref="vlaamsparlement_api" path="#[flowVars.path]" method="GET" doc:name="Get journaallijn">
                <http:request-builder>
                    <http:header headerName="Accept" value="application/json"/>
                </http:request-builder>
            </http:request>
            <byte-array-to-string-transformer doc:name="Byte Array to String"/>
            <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
            <set-variable variableName="debat" value="#[&quot;&quot;]" doc:name="Reset debat"/>
            <set-variable variableName="gesprek" value="#[&quot;&quot;]" doc:name="Reset gesprek"/>
            <foreach collection="#[payload.get('spreker')]" doc:name="For Each spreker">
                <choice doc:name="Sprekertitel null?">
                    <when expression="#[payload.get('sprekertitel') == null]">
                        <set-variable variableName="gesprek" value="#[flowVars.gesprek + payload.get('sprekertekst').toString().replaceAll(&quot;\\&lt;[^&gt;]*&gt;&quot;,&quot;&quot;) + &quot;\n&quot;]" doc:name="Append sprekertekst to gesprek"/>
                    </when>
                    <when expression="#[payload.get('sprekertitel') == null &amp;&amp; payload.get('sprekertekst') == null]]">
                        <expression-component doc:name="Do nothing because sprekertitel en sprekertekst empty"><![CDATA[// do nothing]]></expression-component>
                    </when>
                    <otherwise>
                        <set-variable variableName="gesprek" value="#[flowVars.gesprek + payload.get('sprekertitel').toString().replaceAll(&quot;\\&lt;[^&gt;]*&gt;&quot;,&quot;&quot;) + &quot;: &quot; + payload.get('sprekertekst').toString().replaceAll(&quot;\\&lt;[^&gt;]*&gt;&quot;,&quot;&quot;) + &quot;\n&quot;]" doc:name="Append sprekertitel + sprekertekst to gesprek (remove first, last characters and html tags)"/>
                    </otherwise>
                </choice>
            </foreach>
            <choice doc:name="Choice">
                <when expression="#[flowVars.gesprek == &quot;&quot;]">
                    <expression-component doc:name="do nothing"><![CDATA[// do nothing]]></expression-component>
                </when>
                <otherwise>
                    <expression-component doc:name="Append gesprek to transcriptie"><![CDATA[#[flowVars.transcriptie += flowVars.journaallijn_titel + "\n" + flowVars.gesprek]]]></expression-component>
                </otherwise>
            </choice>
        </foreach>
        <custom-transformer class="utils.UnescapeHtml" doc:name="Remove HTML escaping"/>
        <set-variable variableName="transcriptie" value="#[payload]" doc:name="Set transcriptie with unescaped HTML"/>
        <foreach collection="#[flowVars.vergadering_response.get('vergadering').get('journaallijn')]" doc:name="For Each journaallijn">
            <set-variable variableName="journaallijn_titel" value="#[payload.titel + &quot;\n&quot;]" doc:name="Set journaallijn_titel"/>
            <set-variable variableName="debat" value="#[&quot;&quot;]" doc:name="Reset debat"/>
            <choice tracking:enable-default-events="true" doc:name="debat &gt; 0?">
                <when expression="#[payload.'debat'.size() &gt; 0]">
                    <foreach collection="#[payload.'debat']" doc:name="For Each debat">
                        <set-variable variableName="debat" value="#[flowVars.'debat' != null ? (flowVars.'debat' + payload.titel + &quot;\n&quot;) : (payload.titel + &quot;\n&quot;)]" doc:name="Set debat"/>
                        <set-variable variableName="zittingsjaar" value="#[payload.zittingsjaar != null  &amp;&amp; payload.zittingsjaar != &quot;&quot; ?  &quot;(&quot; + payload.zittingsjaar + &quot;)&quot; : &quot;&quot;]" doc:name="Set zittingsjaar"/>
                        <set-variable variableName="nummer" value="#[payload.nummer != null  &amp;&amp; payload.nummer != &quot;&quot; ? payload.nummer + &quot; &quot; : &quot;&quot;]" doc:name="Set nummer"/>
                        <set-variable variableName="debat" value="#[flowVars.'debat' != null ? (flowVars.'debat' + payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar + &quot;\n&quot;) : (payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar)]" doc:name="Set debat"/>
                    </foreach>
                </when>
                <otherwise>
                    <set-variable variableName="debat" value="#[&quot;&quot;]" doc:name="Set debat empty"/>
                </otherwise>
            </choice>
            <set-variable variableName="parlementair_initiatieven" value="#[null]" doc:name="Reset parlementair_initiatieven"/>
            <choice doc:name="Parlementaire initieven &gt; 0?">
                <when expression="#[payload.'parlementair-initiatief'.size() &gt; 0]">
                    <foreach collection="#[payload.'parlementair-initiatief']" doc:name="For Each parlementaire initiatief">
                        <set-variable variableName="zittingsjaar" value="#[payload.zittingsjaar != null  &amp;&amp; payload.zittingsjaar != &quot;&quot; ?  &quot;(&quot; + payload.zittingsjaar + &quot;)&quot; : &quot;&quot;]" doc:name="Set zittingsjaar"/>
                        <set-variable variableName="nummer" value="#[payload.nummer != null  &amp;&amp; payload.nummer != &quot;&quot; ? payload.nummer + &quot; &quot; : &quot;&quot;]" doc:name="Set nummer"/>
                        <set-variable variableName="materie" value="#[payload.materie != null &amp;&amp; payload.materie != &quot;&quot; ? payload.materie + &quot;\n&quot; : &quot;&quot;]" doc:name="Set materie"/>
                        <set-variable variableName="volgnummer" value="#[payload.volgnr != null  &amp;&amp; payload.volgnr != &quot;&quot; ? &quot; nr. &quot; + payload.volgnr : &quot;&quot;]" doc:name="Set volgnummer"/>
                        <set-variable variableName="parlementair_initiatieven" value="#[flowVars.'parlementair_initiatieven' != null ? (flowVars.'parlementair_initiatieven' + payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot; + flowVars.materie + &quot;\n&quot;) : (payload.titel + &quot;\n&quot; + flowVars.nummer + flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot; + flowVars.materie + &quot;\n&quot;)]" doc:name="Set parlementair_initiatieven"/>
                    </foreach>
                </when>
                <otherwise>
                    <set-variable variableName="parlementair_initiatieven" value="#[&quot;&quot;]" doc:name="Set parlementair_initiatieven empty"/>
                </otherwise>
            </choice>
            <set-variable variableName="gedachtewisseling" value="#[&quot;&quot;]" doc:name="Reset gedachtewisseling"/>
            <choice tracking:enable-default-events="true" doc:name="Gedachtewisseling &gt; 0?">
                <when expression="#[payload.'gedachtewisseling'.size() &gt; 0]">
                    <foreach collection="#[payload.'gedachtewisseling']" doc:name="For Each gedachtewisseling">
                        <set-variable variableName="gedachtewisseling" value="#[flowVars.'gedachtewisseling' != null ? (flowVars.'gedachtewisseling' + payload.titel + &quot;\n&quot;) : (payload.titel + &quot;\n&quot;)]" doc:name="Set gedachtewisseling"/>
                    </foreach>
                </when>
                <otherwise>
                    <set-variable variableName="gedachtewisseling" value="#[&quot;&quot;]" doc:name="Set gedachtewisseling empty"/>
                </otherwise>
            </choice>
            <set-variable variableName="verzoekschrift" value="#[&quot;&quot;]" doc:name="Reset verzoekschrift"/>
            <choice tracking:enable-default-events="true" doc:name="verzoekschrift &gt; 0?">
                <when expression="#[payload.'verzoekschrift'.size() &gt; 0]">
                    <foreach collection="#[payload.'verzoekschrift']" doc:name="For Each verzoekschrift">
                        <set-variable variableName="verzoekschrift" value="#[flowVars.'verzoekschrift' != null ? (flowVars.'verzoekschrift' + payload.titel + &quot;\n&quot;) : (payload.titel + &quot;\n&quot;)]" doc:name="Set verzoekschrift"/>
                    </foreach>
                </when>
                <otherwise>
                    <set-variable variableName="verzoekschrift" value="#[&quot;&quot;]" doc:name="Set verzoekschrift empty"/>
                </otherwise>
            </choice>
            <set-variable variableName="vrageninterpellatie" value="#[null]" doc:name="Reset vrageninterpellatie"/>
            <choice doc:name="Vrageninterpellaties &gt; 0?">
                <when expression="#[payload.vrageninterpellatie.size() &gt; 0]">
                    <foreach collection="#[payload.vrageninterpellatie]" doc:name="For Each vrageninterpellatie">
                        <set-variable variableName="zittingsjaar" value="#[payload.zittingsjaar != null  &amp;&amp; payload.zittingsjaar != &quot;&quot; ? &quot;(&quot; + payload.zittingsjaar + &quot;)&quot; : &quot;&quot;]" doc:name="Set zittingsjaar"/>
                        <set-variable variableName="nummer" value="#[payload.nummer != null  &amp;&amp; payload.nummer != &quot;&quot; ? payload.nummer + &quot; &quot; : &quot;&quot;]" doc:name="Set nummer"/>
                        <set-variable variableName="materie" value="#[payload.materie != null  &amp;&amp; payload.materie != &quot;&quot; ? payload.materie + &quot;\n&quot; : &quot;&quot;]" doc:name="Set materie"/>
                        <set-variable variableName="volgnummer" value="#[payload.volgnr != null  &amp;&amp; payload.volgnr != &quot;&quot; ? &quot; nr. &quot; + payload.volgnr : &quot;&quot;]" doc:name="Set volgnummer"/>
                        <set-variable variableName="vrageninterpellatie" value="#[flowVars.vrageninterpellatie != null  ? (flowVars.vrageninterpellatie + payload.titel + &quot;\n&quot; + flowVars.nummer +  flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot; + flowVars.materie + &quot;\n&quot;) : (payload.titel + &quot;\n&quot; + flowVars.nummer +  flowVars.zittingsjaar + flowVars.volgnummer + &quot;\n&quot;+ flowVars.materie + &quot;\n&quot;)]" doc:name="Set vrageninterpellatie"/>
                    </foreach>
                </when>
                <otherwise>
                    <set-variable variableName="vrageninterpellatie" value="#[&quot;&quot;]" doc:name="Set vrageninterpellatie empty"/>
                </otherwise>
            </choice>
            <choice doc:name="Welke titel-samenstelling?">
                <when expression="#[flowVars.'titel-samenstelling' == 'N']">
                    <choice doc:name="When initiatieven are empty, use vrije tekst titel">
                        <when expression="#[(flowVars.vrageninterpellatie + flowVars.debat + flowVars.gedachtewisseling + flowVars.parlementair_initiatieven + flowVars.verzoekschrift) == &quot;&quot;]">
                            <set-variable variableName="dc_description_lang" value="#[dc_description_lang != &quot;&quot; ? (flowVars.dc_description_lang + &quot;\n&quot; + flowVars.journaallijn_titel) : flowVars.journaallijn_titel]" doc:name="Append to dc_description_lang (only vrije tekst titel)"/>
                        </when>
                        <otherwise>
                            <set-variable variableName="dc_description_lang" value="#[dc_description_lang != &quot;&quot; ? (flowVars.dc_description_lang + &quot;\n&quot; + flowVars.vrageninterpellatie + flowVars.debat + flowVars.gedachtewisseling + flowVars.parlementair_initiatieven + flowVars.verzoekschrift) : (flowVars.vrageninterpellatie + flowVars.debat + flowVars.gedachtewisseling + flowVars.parlementair_initiatieven + flowVars.verzoekschrift) ]" doc:name="Append to dc_description_lang (when N = geen vrije tekst titel, enkel initiatieven)"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.'titel-samenstelling' == 'V']">
                  <set-variable variableName="dc_description_lang" value="#[dc_description_lang != &quot;&quot; ? (flowVars.dc_description_lang + &quot;\n&quot; + flowVars.journaallijn_titel) : flowVars.journaallijn_titel]" doc:name="Append to dc_description_lang (when V = enkel vrije tekst titel)"/>
                </when>
                <otherwise>
        	    	<set-variable variableName="dc_description_lang" value="#[dc_description_lang != &quot;&quot; ? (flowVars.dc_description_lang + &quot;\n&quot; + flowVars.journaallijn_titel +  &quot;\n&quot; +  flowVars.vrageninterpellatie + &quot;\n&quot; + flowVars.debat + flowVars.gedachtewisseling + flowVars.parlementair_initiatieven + flowVars.verzoekschrift) : (flowVars.journaallijn_titel + flowVars.vrageninterpellatie +  &quot;\n&quot; + flowVars.debat + flowVars.gedachtewisseling + flowVars.parlementair_initiatieven + flowVars.verzoekschrift) ]" doc:name="Append to dc_description_lang (normal)"/>
                </otherwise>
            </choice>
        </foreach>
    </sub-flow>
    <sub-flow name="metadata_corrections">
        <set-variable variableName="mappedXml" value="#[flowVars.mappedXml.replaceAll('&lt;trefwoord&gt;', '&lt;Trefwoord&gt;').replaceAll('&lt;/trefwoord&gt;', '&lt;/Trefwoord&gt;')]" doc:name="Fix trefwoord -&gt; Trefwoord"/>
        <set-variable variableName="mappedXml" value="#[flowVars.mappedXml.replaceAll('&lt;auteursrechthouder&gt;', '&lt;Auteursrechthouder&gt;').replaceAll('&lt;/auteursrechthouder&gt;','&lt;/Auteursrechthouder&gt;')]" doc:name="Fix auteursrechthouder -&gt; Auteursrechthouder"/>
        <set-variable variableName="mappedXml" value="#[flowVars.mappedXml.replaceAll('&lt;licentiehouder&gt;', '&lt;Licentiehouder&gt;').replaceAll('&lt;/licentiehouder&gt;','&lt;/Licentiehouder&gt;')]" doc:name="Fix licentiehouder -&gt; Licentiehouder"/>
        <choice doc:name="Languages available?">
            <when expression="#[flowVars.mappedXml.indexOf('&lt;dc_languages type=&quot;list&quot;&gt;') == -1]">
                <logger message="No language metadata available" level="INFO" doc:name="No language metadata available"/>
            </when>
            <otherwise>
                <set-variable variableName="languages" value="#[flowVars.mappedXml.substring(flowVars.mappedXml.indexOf('&lt;dc_languages type=&quot;list&quot;&gt;'), flowVars.mappedXml.indexOf('&lt;/dc_languages&gt;'))]" doc:name="Set languages"/>
                <set-variable variableName="mappedXml" value="#[flowVars.mappedXml.replace(flowVars.languages, flowVars.languages.toLowerCase())]" doc:name="Fix languages to lowercase"/>
            </otherwise>
        </choice>
    </sub-flow>
    <flow name="validateMetadataFromVIAAtoMAM" >
        <set-variable variableName="eventName" value="PI_VALIDATE_METADATA_VIAA_MAM" doc:name="Set eventName"/>
        <set-payload value="#[flowVars.mappedXml]" doc:name="Set Payload with mappedXml"/>
        
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML" />
        <message-filter onUnaccepted="error_invalid_data" doc:name="Validate mappedXml" >
            <mulexml:schema-validation-filter schemaLocations="viaa_metadatamodel_van_viaa_naar_mam.xsd" returnResult="false" name="VIAA_MAM_Schema_Validation"
        doc:name="Schema Validation" />
        </message-filter>
        <logger message="FILE OK: #[message.payload]" level="INFO" doc:name="Logger" />
        <set-variable variableName="result" value="OK" doc:name="Set result OK"/>
        <set-variable variableName="comment" value="The mapped XML is valid." doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </flow>
 
    <flow name="error_invalid_data" >
        <logger message="ERROR: MESSAGE PAYLOAD: #[message.payload]" level="INFO" doc:name="Logger" />
        <set-variable variableName="result" value="NOK" doc:name="Set result NOK"/>
        <set-variable variableName="comment" value="The mapped XML is NOT valid." doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </flow>
    <sub-flow name="validateEDTFdates">
        <set-variable variableName="eventName" value="#['PI_VALIDATE_DATE']" doc:name="Set eventName"/>
        <set-variable variableName="dcterms_issued" value="#[xpath3(&quot;//dcterms_issued/text()&quot;, flowVars.mappedXml)]" doc:name="Get dcterms_issued"/>
        <set-variable variableName="dcterms_created" value="#[xpath3(&quot;//dcterms_created/text()&quot;, flowVars.mappedXml)]" doc:name="Get dcterms_created"/>
        <choice doc:name="When dcterms_created is empty">
            <when expression="#[flowVars.dcterms_created == &quot;&quot;]">
                <set-variable variableName="dcterms_created_is_valid" value="#[true]" doc:name="dcterms_created_is_valid is true"/>
            </when>
            <otherwise>
                <until-successful maxRetries="20" millisBetweenRetries="5000" synchronous="true" doc:name="Until Successful">
                    <http:request config-ref="edtf_validator" path="/" method="GET" doc:name="Send request to validate">
                        <http:request-builder>
                            <http:query-param paramName="date" value="#[flowVars.dcterms_issued]"/>
                        </http:request-builder>
                        <http:success-status-code-validator values="1..999"/>
                    </http:request>
                </until-successful>
                <choice doc:name="When not http 200">
                    <when expression="message.inboundProperties.'http.status' != 200">
                        <set-variable variableName="dcterms_created_is_valid" value="#[true]" doc:name="Set dcterms_created_is_valid true"/>
                    </when>
                    <otherwise>
                        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
                        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
                        <set-variable variableName="dcterms_created_is_valid" value="#[payload.validEDTF == true]" doc:name="Set dcterms_created_is_valid"/>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        <choice doc:name="When dcterms_issued is empty">
            <when expression="#[flowVars.dcterms_issued == &quot;&quot;]">
                <set-variable variableName="dcterms_issued_is_valid" value="#[true]" doc:name="Set dcterms_issued_is_valid is true"/>
            </when>
            <otherwise>
                <http:request config-ref="edtf_validator" path="/" method="GET" doc:name="Send request to validate dcterms_created">
                    <http:request-builder>
                        <http:query-param paramName="date" value="#[flowVars.dcterms_created]"/>
                    </http:request-builder>
                    <http:success-status-code-validator values="1..999"/>
                </http:request>
                <choice doc:name="When not http 200">
                    <when expression="message.inboundProperties.'http.status' != 200">
                        <set-variable variableName="dcterms_issued_is_valid" value="#[true]" doc:name="Set dcterms_issued_is_valid true"/>
                    </when>
                    <otherwise>
                        <byte-array-to-string-transformer mimeType="application/json" doc:name="Byte Array to String"/>
                        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
                        <set-variable variableName="dcterms_issued_is_valid" value="#[payload.validEDTF == true]" doc:name="Set dcterms_issued_is_valid"/>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        <set-variable variableName="result" value="#[flowVars.dcterms_issued_is_valid &amp;&amp; flowVars.dcterms_created_is_valid ? &quot;OK&quot; : &quot;NOK&quot;]" doc:name="Set result OK when dcterms_issued and created are valid"/>
        <set-variable variableName="comment" value="dcterms_created and issued are #[flowVars.result]" doc:name="Set comment"/>
        <flow-ref name="PI_LOG" doc:name="PI_LOG"/>
    </sub-flow>
</mule>
